<?php
/**
 * This file is part of Ticketconverter.
 *
 * @category developer tool
 * @package ticketconverter-tests
 *
 * @author Christoph Jaecks <christoph.jaecks@fashionforhome.de>
 * @author Tino St√∂ckel <tino.stoeckel@fashionforhome.de>
 *
 * @copyright (c) 2012 by fashion4home GmbH <www.fashionforhome.de>
 * @license GPL-3.0
 * @license http://opensource.org/licenses/GPL-3.0 GNU GENERAL PUBLIC LICENSE
 *
 * @version 1.0.0
 *
 * Date: 30.10.2015
 * Time: 01:30
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
require_once dirname(__FILE__) . '/../../../../app/F4h/TicketConverter/Manager.php';

/**
 * Test class for F4h_TicketConverter_Manager.
 * Generated by PHPUnit on 2012-01-09 at 13:11:12.
 */
class F4h_TicketConverter_ManagerTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var F4h_TicketConverter_Manager
     */
    protected $object;
    protected $queue;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->queue = $this->getMock('F4h_TicketConverter_Model_Queue');
        $this->object = new F4h_TicketConverter_Manager($this->queue);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @covers F4h_TicketConverter_Manager::getTicketQueue
     */
    public function testGetTicketQueueWithOneId()
    {
        $this->queue->enqueue('4114');

        $returnValue = $this->object->getTicketQueue();
        $this->assertInstanceOf('F4h_TicketConverter_Model_Queue', $returnValue);

        foreach ($returnValue as $value) {
            $this->assertInstanceOf('F4h_TicketConverter_Model_Ticket', $value);
        }
    }

    /**
     * @covers F4h_TicketConverter_Manager::getTicketQueue
     */
    public function testGetTicketQueueWithMoreIds()
    {
        $this->queue->enqueue('4114');
        $this->queue->enqueue('4112');

        $returnValue = $this->object->getTicketQueue();
        $this->assertInstanceOf('F4h_TicketConverter_Model_Queue', $returnValue);
        
        foreach ($returnValue as $value) {
            $this->assertInstanceOf('F4h_TicketConverter_Model_Ticket', $value);
        }
    }

    /**
     * @covers F4h_TicketConverter_Manager::getTicketQueue
     */
    public function testGetTicketQueueWithInvalid()
    {
        $returnValue = $this->object->getTicketQueue();
        $this->assertInstanceOf('F4h_TicketConverter_Model_Queue', $returnValue);
        
        $this->assertEmpty($returnValue->count());
    }

    /**
     * @covers F4h_TicketConverter_Manager::buildOutput
     * @todo Implement testStartProcess().
     */
    public function testBuildOutput()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers F4h_TicketConverter_Manager::__destruct
     * @todo Implement test__destruct().
     */
    public function test__destruct()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}

?>
