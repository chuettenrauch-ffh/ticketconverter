<?php

require_once dirname(__FILE__) . '/../../../../../app/F4h/TicketConverter/QueueBuilder/Factory.php';

/**
 * Test class for F4h_TicketConverter_QueueBuilder_Factory.
 * Generated by PHPUnit on 2012-01-06 at 17:43:27.
 */
class F4h_TicketConverter_QueueBuilder_FactoryTest extends PHPUnit_Framework_TestCase
{

    protected $config;

    public function provider()
    {
        return array(
            //web | valid url
            array(2,
                array(
                    'link' => 'https://fashion4home.jira.com/sr/jira.issueviews:searchrequest-xml/temp/SearchRequest.xml?jqlQuery=key%3D%22DMF-4114%22&tempMax=1000'
                ),
                'F4h_TicketConverter_QueueBuilder_Web_Link'
            ),
            //web | invalid url
            array(2,
                array(
                    'link' => 'bla'
                ),
                'Exception'
            ),
            //cli | valid single input
            array(1,
                array(
                    's' => '',
                    'i' => '4114'
                ),
                'F4h_TicketConverter_QueueBuilder_Cli_Single'
            ),
            //cli | invalid input
            array(1,
                array(
                    'i' => 'sdfsdd'
                ),
                'Exception'
            )
        );
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->path = dirname(__FILE__) . '/../../../../../public/ticketconverter.php';
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @covers F4h_TicketConverter_QueueBuilder_Factory::getQueueBuilder
     * @dataProvider provider
     */
    public function testGetQueueBuilder($env, $input, $expected)
    {
//        $this->config = $this->getMock('F4h_TicketConverter_Config', array('getEnvironment'))
//                ->will($env);
//        F4h_TicketConverter_Config::getInstance()->setEnvironment($env);


        if ($expected === 'Exception') {
//            $this->setExpectedException('F4h_TicketConverter_QueueBuilder_Exception');
            $this->assertInternalType($this->setExpectedException('F4h_TicketConverter_QueueBuilder_Exception'), 
                    F4h_TicketConverter_QueueBuilder_Factory::getQueueBuilder($input)
            );
        } else {
            $returnValue = F4h_TicketConverter_QueueBuilder_Factory::getQueueBuilder($input);
            $this->assertInstanceOf($expected, $returnValue);
        }
    }

}

?>
